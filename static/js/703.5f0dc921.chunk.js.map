{"version":3,"file":"static/js/703.5f0dc921.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\",\"form\":\"ContactForm_form__dhl+T\",\"lable\":\"ContactForm_lable__W7bCm\"};","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n    const [contact, setContact] = useState({\n        name: '',\n        number: '',\n    });\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const onInputChange = event => {\n        const { name, value } = event.currentTarget;\n        setContact(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const onSubmit = event => {\n        event.preventDefault();\n\n        const foundContact = contacts.find(({ name }) => name.toLowerCase() === contact.name.toLocaleLowerCase());\n        if (!foundContact) {\n            dispatch(\n                addContact({\n                    name: contact.name,\n                    number: contact.number,\n                })\n            );\n        } else {\n            alert(`${contact.name} is already in contacts.`);\n        }\n        setContact({ name: '', number: '' });\n    };\n\n    return (\n        <div>\n            <form className={css.form} onSubmit={onSubmit}>\n                <label className={css.lable}>\n                    Name\n                    <input\n                        className={css.inputContact}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={contact.name}\n                        onChange={onInputChange}\n                    />\n                </label>\n                <label className={css.lable}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={contact.number}\n                        onChange={onInputChange}\n                    />\n                </label>\n                <button type=\"submit\" className={css.button}>\n                    Add contact\n                </button>\n            </form>\n        </div>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"remove\":\"ContactList_remove__eupmf\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const filteredArray = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n        <ul className={css.list}>\n            {filteredArray.map(({ id, name, number }) => (\n                <li key={id} className={css.item}>\n                    {name + ': ' + number}\n                    <button\n                        type=\"button\"\n                        className={css.remove}\n                        onClick={() => dispatch(deleteContact(id))}\n                    >\n                        Delete\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setValue } from 'redux/contacts/contactsSlice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    const onChange = event => {\n        const value = event.currentTarget.value.toLowerCase();\n\n        dispatch(setValue(value));\n    };\n\n    return (\n        <label className={css.label}>\n            Find contacts by name\n            <input type=\"text\" onChange={onChange} />\n        </label>\n    );\n};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div style={{ margin: '0 auto', width: '333px' }}>\n            <h2>Phonebook</h2>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            {!isLoading && !error && <ContactList />}\n        </div>\n    );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","number","contact","setContact","dispatch","useDispatch","useSelector","onInputChange","event","currentTarget","value","prevState","className","css","onSubmit","preventDefault","find","toLowerCase","toLocaleLowerCase","alert","addContact","type","pattern","title","required","onChange","ContactList","filteredArray","includes","map","id","onClick","deleteContact","Filter","setValue","useEffect","fetchContacts","style","margin","width"],"sourceRoot":""}