{"version":3,"file":"static/js/382.925228ec.chunk.js","mappings":"yLACA,OAAgB,gBAAkB,mC,sDCyElC,EAnEiB,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACNP,GAASQ,EAAAA,EAAAA,MACZ,GAAE,CAACR,IAEJ,IAiBMS,GACF,kBAAMC,UAAWC,EAAAA,KAAaC,SAlBb,SAAAC,GACjBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,cAAcC,SAASF,KAAKG,MACzCC,EAAQN,EAAMG,cAAcC,SAASE,MAAMD,MAC3CE,EAAWP,EAAMG,cAAcC,SAASG,SAASF,MAEvDlB,GACIqB,EAAAA,EAAAA,IAAS,CACLN,KAAAA,EACAI,MAAAA,EACAC,SAAAA,KAGRP,EAAMG,cAAcM,OACvB,EAGG,WACI,mBAAOZ,UAAWC,EAAAA,MAAlB,uBACa,kBAAOY,KAAK,OAAOR,KAAK,aAErC,mBAAOL,UAAWC,EAAAA,MAAlB,mBAEI,kBACIY,KAAK,QACLR,KAAK,QACLS,QAAQ,2CACRC,MAAM,8BAGd,mBAAOf,UAAWC,EAAAA,MAAlB,sBAEI,kBACIY,KAAK,WACLR,KAAK,WACLS,QAAQ,8BACRC,MAAM,wHAGd,mBAAQf,UAAWC,EAAAA,YAAoBY,KAAK,SAA5C,yBAMR,OACI,iBAAKb,UAAWC,EAAAA,gBAAhB,UACKT,GACCA,GAAaO,EACdJ,IAAUH,IACP,eAAIwB,MAAO,CAAEC,MAAO,OAApB,SAA8BtB,GAAS,eAItD,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerWrapper\":\"Register_registerWrapper__fG+F1\"};","import styles from './Register.module.css';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { selectIsLoading, selectError } from 'redux/auth/authSelectors';\nimport { resetAuthError } from 'redux/auth/authSlice';\n\nconst Register = () => {\n    const dispatch = useDispatch();\n\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(resetAuthError());\n    }, [dispatch]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const name = event.currentTarget.elements.name.value;\n        const email = event.currentTarget.elements.email.value;\n        const password = event.currentTarget.elements.password.value;\n\n        dispatch(\n            register({\n                name,\n                email,\n                password,\n            })\n        );\n        event.currentTarget.reset();\n    };\n\n    const registerForm = (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <label className={styles.label}>\n                Username <input type=\"text\" name=\"name\" />\n            </label>\n            <label className={styles.label}>\n                Email\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                    title=\"Invalid email address\"\n                />\n            </label>\n            <label className={styles.label}>\n                Password\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    pattern=\"(?=.*[a-z])(?=.*[1-9]).{8,}\"\n                    title=\"The password cannot be less than 7 characters and must contain at least one number, one lowercase latin letter.\"\n                />\n            </label>\n            <button className={styles.btnRegister} type=\"submit\">\n                Register\n            </button>\n        </form>\n    );\n\n    return (\n        <div className={styles.registerWrapper}>\n            {isLoading}\n            {!isLoading && registerForm}\n            {error && !isLoading && (\n                <h3 style={{ color: 'red' }}>{error || 'Error...'}</h3>\n            )}\n        </div>\n    );\n};\n\nexport default Register;"],"names":["dispatch","useDispatch","isLoading","useSelector","selectIsLoading","error","selectError","useEffect","resetAuthError","registerForm","className","styles","onSubmit","event","preventDefault","name","currentTarget","elements","value","email","password","register","reset","type","pattern","title","style","color"],"sourceRoot":""}